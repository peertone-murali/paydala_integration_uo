@startuml Paydala integration
title Paydala integration steps for deposit
bottomparticipants
 
fontawesome5regular f0f8 
participant "Operator App" as OpApp
participant "Operator portal" as OpPortal
participant "Operator Backend" as OpBackend
participant "Paydala Flutter widget" as PaydalaWidget
participant "Paydala Backend" as PaydalaBackend

skinparam sequenceGroupBackgroundColor red

entryspacing 1.3
group Setup webhook

OpPortal->PaydalaBackend:subscribe( {region, url }) 
activate PaydalaBackend
OpPortal<--PaydalaBackend:return( {subscription_object} )
deactivate PaydalaBackend

end


group  Deposit flow 

note over OpApp,OpBackend#lightYellow:get payload signed with API key from the \nsigning service running on Op Backend \nusing shared secret
note over OpBackend #lightYellow:payload could be...\n{\n"firstName": "John",\n"middleName": "William",\n"lastName": "Deere",\n"customerId": "1",\n"email": "john.deere@test.com",\n"dob": "10/22/2000",\n"ssl4": "3456",\n"streetAddress": "123 Elm st",\n"addressCity": "Big city",\n"addressState": "Tx",\n"addressZip": "56060",\n"addressCountry": "USA",\n"mobilePh": "4023345676"\n}

OpApp->OpBackend:getSignedCreds(payload)
activate OpBackend 

#OpBackend->OpBackend:sign with API key

OpApp<--OpBackend:return(creds,signature)
deactivate OpBackend

note over OpApp #lightYellow:creds is returned as JSON \n{\n   client_id, \n   category_id, \n   region,\n   timeStamp, \n   {payload}\n}\n

create PaydalaWidget
OpApp->PaydalaWidget:createPaydalaWidget(title, url)
loop until deposit succeeds
OpApp->PaydalaWidget:startDepositFlow ({requestId, creds, signature})
activate PaydalaWidget

PaydalaWidget->PaydalaBackend:identifyPartner( {creds} )
activate PaydalaBackend
PaydalaWidget<--PaydalaBackend:return( {partnerDetails} }
deactivate PaydalaBackend

alt #lightgrey not logged in
PaydalaWidget->PaydalaBackend:login or continue as guest
activate PaydalaBackend
end

PaydalaWidget->PaydalaBackend:deposit( {requestId, creds, params} )
PaydalaWidget<--PaydalaBackend:result

OpBackend<-PaydalaBackend:webhookConfirmation( {txnDetails} )\n
activate OpBackend
OpBackend-->PaydalaBackend:return(httpStatus=200)
deactivate OpBackend
PaydalaWidget<--PaydalaBackend:(guest) logout(httpStatus=200)
deactivate PaydalaBackend
note over OpBackend,PaydalaWidget#lightyellow :txnDetails :\n{\n    "result": "partial",\n    "refType": 2,\n    "txnRef": "3b524d4-c254-11ed-afa1-0242ac120002",\n    "timeStamp": "%Y-%m-%d %H:%M:%S.%f",\n    "txnDetails": [\n      {\n        "txnRef": "abcdef",\n        "status": "processing",\n        "currencyId": 1,\n        "amount": 10,\n        "timeStamp": "%Y-%m-%d %H:%M:%S.%f"\n      },\n      ...\n    ]\n}
OpApp<--PaydalaWidget:result(httpStatus, {txnDetails} or message)
deactivate PaydalaWidget
expandable+  process result from startDepositFlow

expandable+ #lightGreen handling deposit result through Paydala Flutter widget (requires active session)
'alt httpStatus == 400 (message == "Txn in progress" or message == "Connection terminated")
OpApp->PaydalaWidget
OpApp<-PaydalaWidget
loop until httpStatus == 200 or (httpStatus == 400 and message == "Deposit failed")
OpApp->PaydalaWidget:getLastTxnStatus()
'activate PaydalaWidget
PaydalaWidget->PaydalaBackend:getTxnStatus( {refType, txnRef} ) 
PaydalaWidget<-PaydalaBackend:result( {txnDetails} )
OpApp<-PaydalaWidget:result( flutterTxnDetails )
'deactivate PaydalaWidget

OpBackend->PaydalaBackend
activate PaydalaBackend
OpBackend<--PaydalaBackend
deactivate PaydalaBackend
'else 
'end
'OpApp<--OpBackend
deactivate OpBackend
end 
else httpStatus == 400 (message = "Deposit failed")
else httpStatus == 200 (deposit successful)
end


'---handling inside PFW
expandable+ #lightBlue handling deposit result in Operator App (through the getTxnStatus API)
alt httpStatus == 400 (message == "Txn in progress" or message == "Connection terminated")
loop until httpStatus == 200 or (httpStatus == 400 and message == "Deposit failed")
OpApp->OpBackend:getTxnStatus( {refType, refId} as payload )
activate OpBackend
OpBackend->OpBackend
OpBackend->OpBackend:checkWebhookConfirmation( {refType, txnRef} )
alt #lightPink txnNotConfirmed

OpBackend->PaydalaBackend:getTxnStatus( {refType, txnRef} )
activate PaydalaBackend
OpBackend<--PaydalaBackend:result(httpStatus, {txnDetails} or message)
deactivate PaydalaBackend
else txnConfirmed
end
OpApp<--OpBackend:result(httpStatus=200, {txnDetails} or message)
deactivate OpBackend
end 
else httpStatus == 400 (message = "Deposit failed")
else httpStatus == 200 (deposit successful)

end
end
'---end 
end




OpApp->PaydalaWidget:destroyPaydalaWidget()
destroy PaydalaWidget


end loop

end

@enduml







